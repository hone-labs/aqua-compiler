#pragma version 5
int 255
store 0
int 3
dup
store 1
pop
int 5
store 2
int 8
store 3
load 2
load 3
+
int 5
<
bz else_1
load 2
load 3
+
callsub add
return
b end_1
else_1:
load 2
load 3
callsub multiply
return
end_1:
b program_end
add:
load 0
load 0
int 3
-
store 0
load 0
swap
stores
int 2
load 0
+
stores
int 1
load 0
+
stores
load 0
int 1
+
loads
load 0
int 2
+
loads
+
b add-cleanup
add-cleanup:
load 0
loads
store 0
retsub
multiply:
load 0
load 0
int 3
-
store 0
load 0
swap
stores
int 2
load 0
+
stores
int 1
load 0
+
stores
load 0
int 1
+
loads
load 0
int 2
+
loads
*
b multiply-cleanup
multiply-cleanup:
load 0
loads
store 0
retsub
program_end: